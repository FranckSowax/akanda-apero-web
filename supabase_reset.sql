-- =====================================================
-- SCRIPT DE R√âINITIALISATION SUPABASE
-- ‚ö†Ô∏è  ATTENTION : Ce script supprime TOUTES les donn√©es
-- =====================================================

-- √âTAPE 1: D√©sactiver RLS temporairement pour √©viter les erreurs
ALTER TABLE IF EXISTS customers DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS orders DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS order_items DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS cart_sessions DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS reviews DISABLE ROW LEVEL SECURITY;

-- √âTAPE 2: Supprimer toutes les politiques RLS existantes
DO $$ 
DECLARE
    pol RECORD;
BEGIN
    FOR pol IN 
        SELECT schemaname, tablename, policyname 
        FROM pg_policies 
        WHERE schemaname = 'public'
    LOOP
        EXECUTE format('DROP POLICY IF EXISTS %I ON %I.%I', 
                      pol.policyname, pol.schemaname, pol.tablename);
    END LOOP;
END $$;

-- √âTAPE 3: Supprimer tous les triggers
DO $$ 
DECLARE
    trig RECORD;
BEGIN
    FOR trig IN 
        SELECT trigger_name, event_object_table 
        FROM information_schema.triggers 
        WHERE trigger_schema = 'public'
        AND trigger_name NOT LIKE 'RI_%' -- Garder les triggers de contraintes
    LOOP
        EXECUTE format('DROP TRIGGER IF EXISTS %I ON %I', 
                      trig.trigger_name, trig.event_object_table);
    END LOOP;
END $$;

-- √âTAPE 4: Supprimer toutes les fonctions personnalis√©es
DO $$ 
DECLARE
    func RECORD;
BEGIN
    FOR func IN 
        SELECT routine_name, routine_type
        FROM information_schema.routines 
        WHERE routine_schema = 'public'
        AND routine_name NOT LIKE 'pg_%'
        AND routine_name NOT LIKE 'uuid_%'
    LOOP
        EXECUTE format('DROP %s IF EXISTS %I CASCADE', 
                      func.routine_type, func.routine_name);
    END LOOP;
END $$;

-- √âTAPE 5: Supprimer toutes les s√©quences personnalis√©es
DO $$ 
DECLARE
    seq RECORD;
BEGIN
    FOR seq IN 
        SELECT sequence_name 
        FROM information_schema.sequences 
        WHERE sequence_schema = 'public'
    LOOP
        EXECUTE format('DROP SEQUENCE IF EXISTS %I CASCADE', seq.sequence_name);
    END LOOP;
END $$;

-- √âTAPE 6: Supprimer toutes les tables dans l'ordre correct (contraintes)
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS cart_sessions CASCADE;
DROP TABLE IF EXISTS deliveries CASCADE;
DROP TABLE IF EXISTS order_items CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS kit_ingredients CASCADE;
DROP TABLE IF EXISTS cocktail_kits CASCADE;
DROP TABLE IF EXISTS bundle_items CASCADE;
DROP TABLE IF EXISTS bundles CASCADE;
DROP TABLE IF EXISTS product_options CASCADE;
DROP TABLE IF EXISTS products CASCADE;
DROP TABLE IF EXISTS customers CASCADE;
DROP TABLE IF EXISTS delivery_zones CASCADE;
DROP TABLE IF EXISTS promotions CASCADE;
DROP TABLE IF EXISTS categories CASCADE;

-- √âTAPE 7: Supprimer tous les types ENUM personnalis√©s
DROP TYPE IF EXISTS order_status CASCADE;
DROP TYPE IF EXISTS delivery_status CASCADE;
DROP TYPE IF EXISTS product_type CASCADE;
DROP TYPE IF EXISTS promotion_type CASCADE;

-- √âTAPE 8: Supprimer tous les index personnalis√©s restants
DO $$ 
DECLARE
    idx RECORD;
BEGIN
    FOR idx IN 
        SELECT indexname 
        FROM pg_indexes 
        WHERE schemaname = 'public'
        AND indexname LIKE 'idx_%'
    LOOP
        EXECUTE format('DROP INDEX IF EXISTS %I', idx.indexname);
    END LOOP;
END $$;

-- √âTAPE 9: Nettoyer les donn√©es auth si n√©cessaire (OPTIONNEL - D√âCOMMENTER SI BESOIN)
-- ‚ö†Ô∏è  ATTENTION: Ceci supprime TOUS les utilisateurs authentifi√©s
-- DELETE FROM auth.users WHERE email NOT LIKE '%@supabase.io';

-- √âTAPE 10: R√©initialiser les compteurs de s√©quences syst√®me si n√©cessaire
-- SELECT setval(pg_get_serial_sequence('auth.users', 'id'), 1, false);

-- √âTAPE 11: Cache vid√© automatiquement √† la fin de la transaction
-- (DISCARD ALL ne peut pas s'ex√©cuter dans un bloc de transaction)

-- =====================================================
-- V√âRIFICATION FINALE
-- =====================================================

-- V√©rifier qu'il ne reste plus de tables personnalis√©es
DO $$ 
DECLARE
    table_count INTEGER;
    table_rec RECORD;
BEGIN
    SELECT COUNT(*) INTO table_count
    FROM information_schema.tables 
    WHERE table_schema = 'public'
    AND table_type = 'BASE TABLE';
    
    RAISE NOTICE 'Tables restantes dans public: %', table_count;
    
    IF table_count > 0 THEN
        RAISE NOTICE 'Liste des tables restantes:';
        FOR table_rec IN 
            SELECT t.table_name 
            FROM information_schema.tables t
            WHERE t.table_schema = 'public'
            AND t.table_type = 'BASE TABLE'
        LOOP
            RAISE NOTICE '- %', table_rec.table_name;
        END LOOP;
    ELSE
        RAISE NOTICE '‚úÖ Base de donn√©es compl√®tement nettoy√©e!';
    END IF;
END $$;

-- V√©rifier les types ENUM restants
DO $$ 
DECLARE
    enum_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO enum_count
    FROM pg_type 
    WHERE typtype = 'e' 
    AND typnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public');
    
    RAISE NOTICE 'Types ENUM restants: %', enum_count;
    
    IF enum_count = 0 THEN
        RAISE NOTICE '‚úÖ Tous les types ENUM ont √©t√© supprim√©s!';
    END IF;
END $$;

-- V√©rifier les fonctions restantes
DO $$ 
DECLARE
    func_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO func_count
    FROM information_schema.routines 
    WHERE routine_schema = 'public'
    AND routine_name NOT LIKE 'pg_%'
    AND routine_name NOT LIKE 'uuid_%';
    
    RAISE NOTICE 'Fonctions personnalis√©es restantes: %', func_count;
    
    IF func_count = 0 THEN
        RAISE NOTICE '‚úÖ Toutes les fonctions personnalis√©es ont √©t√© supprim√©es!';
    END IF;
END $$;

-- =====================================================
-- INSTRUCTIONS D'UTILISATION
-- =====================================================

/*
üî• COMMENT UTILISER CE SCRIPT :

1. **SAUVEGARDE** : Assurez-vous d'avoir une sauvegarde si n√©cessaire
2. **Supabase Dashboard** : Allez dans SQL Editor
3. **Ex√©cuter** : Copiez-collez ce script et ex√©cutez-le
4. **V√©rifier** : Regardez les messages de confirmation
5. **Nouveau sch√©ma** : Vous pouvez maintenant ex√©cuter supabase_schema.sql

‚ö†Ô∏è  AVERTISSEMENTS :
- Ce script supprime TOUTES les donn√©es
- Les utilisateurs auth.users sont pr√©serv√©s par d√©faut
- Irr√©versible sans sauvegarde
- Testez d'abord sur un environnement de d√©veloppement

‚úÖ APR√àS EX√âCUTION :
- Base compl√®tement vide
- Pr√™te pour le nouveau sch√©ma
- Aucun conflit de noms
- Performance optimale
*/

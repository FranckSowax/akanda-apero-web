/**
 * Script de test pour v√©rifier la configuration WhatsApp
 * Ex√©cutez avec: node scripts/test-whatsapp.mjs
 */

import { config } from 'dotenv';
import { resolve } from 'path';

// Charger les variables d'environnement
config({ path: resolve(process.cwd(), '.env.local') });

console.log('üîç V√©rification de la configuration WhatsApp...\n');

// V√©rifier les variables d'environnement
const requiredVars = [
  'WHAPI_TOKEN',
  'WHAPI_BASE_URL',
  'NEXT_PUBLIC_WHAPI_TOKEN',
  'NEXT_PUBLIC_WHAPI_BASE_URL'
];

let allConfigured = true;

for (const varName of requiredVars) {
  const value = process.env[varName];
  if (value) {
    console.log(`‚úÖ ${varName}: Configur√©`);
    if (varName.includes('TOKEN')) {
      console.log(`   Token: ${value.substring(0, 10)}...${value.substring(value.length - 5)}`);
    } else {
      console.log(`   Valeur: ${value}`);
    }
  } else {
    console.log(`‚ùå ${varName}: Non configur√©`);
    allConfigured = false;
  }
}

console.log('\n' + '='.repeat(50));

if (allConfigured) {
  console.log('‚úÖ Configuration WhatsApp compl√®te !');
  console.log('\nüì± Prochaines √©tapes:');
  console.log('1. Red√©marrez le serveur: npm run dev');
  console.log('2. Acc√©dez √†: http://localhost:3000/admin/whatsapp');
  console.log('3. Testez l\'envoi d\'un message');
} else {
  console.log('‚ùå Configuration incompl√®te');
  console.log('V√©rifiez votre fichier .env.local');
}
